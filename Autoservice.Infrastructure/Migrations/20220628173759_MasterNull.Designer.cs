// <auto-generated />
using System;
using Autoservice.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Autoservice.Infrastructure.Migrations
{
    [DbContext(typeof(AutoserviceDbContext))]
    [Migration("20220628173759_MasterNull")]
    partial class MasterNull
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Autoservice.Infrastructure.Models.CarPart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("PartId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("PartId");

                    b.ToTable("CarParts");
                });

            modelBuilder.Entity("Autoservice.Infrastructure.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Autoservice.Infrastructure.Models.CustomerCar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("VinCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerCars");
                });

            modelBuilder.Entity("Autoservice.Infrastructure.Models.MarkeCar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MarkeCars");
                });

            modelBuilder.Entity("Autoservice.Infrastructure.Models.Master", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Box")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Masters");
                });

            modelBuilder.Entity("Autoservice.Infrastructure.Models.ModelCar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ManufactureYear")
                        .HasColumnType("int");

                    b.Property<int>("MarkeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MarkeId");

                    b.ToTable("ModelCars");
                });

            modelBuilder.Entity("Autoservice.Infrastructure.Models.ModificationCar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("EngineType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HP")
                        .HasColumnType("int");

                    b.Property<int>("ModelCarId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ModelCarId");

                    b.ToTable("ModificationCars");
                });

            modelBuilder.Entity("Autoservice.Infrastructure.Models.ServiceCheckout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CustomerCarId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("MaserId")
                        .HasColumnType("int");

                    b.Property<string>("ProblemDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RequestTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ServiceStatus")
                        .HasColumnType("int");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerCarId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("MaserId");

                    b.ToTable("ServiceCheckouts");
                });

            modelBuilder.Entity("Autoservice.Infrastructure.Models.ServiceRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProblemDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Statement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ServiceRequests");
                });

            modelBuilder.Entity("Autoservice.Infrastructure.Models.ServiceSpare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<int>("SpareId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.HasIndex("SpareId");

                    b.ToTable("ServiceSpares");
                });

            modelBuilder.Entity("Autoservice.Infrastructure.Models.ServiceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ServiceTypes");
                });

            modelBuilder.Entity("Autoservice.Infrastructure.Models.ServiceTypeSumm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ServiceCheckoutId")
                        .HasColumnType("int");

                    b.Property<int?>("ServiceTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ServiceCheckoutId");

                    b.HasIndex("ServiceTypeId");

                    b.ToTable("ServiceTypeSummsTypes");
                });

            modelBuilder.Entity("Autoservice.Infrastructure.Models.SparePart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SpareParts");
                });

            modelBuilder.Entity("Autoservice.Infrastructure.Models.CarPart", b =>
                {
                    b.HasOne("Autoservice.Infrastructure.Models.ModificationCar", "Car")
                        .WithMany("CarParts")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Autoservice.Infrastructure.Models.SparePart", "Part")
                        .WithMany("CarParts")
                        .HasForeignKey("PartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Part");
                });

            modelBuilder.Entity("Autoservice.Infrastructure.Models.CustomerCar", b =>
                {
                    b.HasOne("Autoservice.Infrastructure.Models.ModificationCar", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Autoservice.Infrastructure.Models.Customer", "Customer")
                        .WithMany("CustomerCars")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Autoservice.Infrastructure.Models.ModelCar", b =>
                {
                    b.HasOne("Autoservice.Infrastructure.Models.MarkeCar", "Marke")
                        .WithMany("ModelCars")
                        .HasForeignKey("MarkeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marke");
                });

            modelBuilder.Entity("Autoservice.Infrastructure.Models.ModificationCar", b =>
                {
                    b.HasOne("Autoservice.Infrastructure.Models.ModelCar", "ModelCar")
                        .WithMany("ModificationCars")
                        .HasForeignKey("ModelCarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ModelCar");
                });

            modelBuilder.Entity("Autoservice.Infrastructure.Models.ServiceCheckout", b =>
                {
                    b.HasOne("Autoservice.Infrastructure.Models.CustomerCar", "CustomerCar")
                        .WithMany("ServiceCheckouts")
                        .HasForeignKey("CustomerCarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Autoservice.Infrastructure.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("Autoservice.Infrastructure.Models.Master", "Master")
                        .WithMany("ServiceCheckouts")
                        .HasForeignKey("MaserId");

                    b.Navigation("Customer");

                    b.Navigation("CustomerCar");

                    b.Navigation("Master");
                });

            modelBuilder.Entity("Autoservice.Infrastructure.Models.ServiceSpare", b =>
                {
                    b.HasOne("Autoservice.Infrastructure.Models.ServiceCheckout", "ServiceCheckout")
                        .WithMany("ServiceSpares")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Autoservice.Infrastructure.Models.SparePart", "Spare")
                        .WithMany("SpareParts")
                        .HasForeignKey("SpareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServiceCheckout");

                    b.Navigation("Spare");
                });

            modelBuilder.Entity("Autoservice.Infrastructure.Models.ServiceTypeSumm", b =>
                {
                    b.HasOne("Autoservice.Infrastructure.Models.ServiceCheckout", "ServiceCheckout")
                        .WithMany("ServiceTypeSumm")
                        .HasForeignKey("ServiceCheckoutId");

                    b.HasOne("Autoservice.Infrastructure.Models.ServiceType", "ServiceType")
                        .WithMany("ServiceTypeSumm")
                        .HasForeignKey("ServiceTypeId");

                    b.Navigation("ServiceCheckout");

                    b.Navigation("ServiceType");
                });

            modelBuilder.Entity("Autoservice.Infrastructure.Models.Customer", b =>
                {
                    b.Navigation("CustomerCars");
                });

            modelBuilder.Entity("Autoservice.Infrastructure.Models.CustomerCar", b =>
                {
                    b.Navigation("ServiceCheckouts");
                });

            modelBuilder.Entity("Autoservice.Infrastructure.Models.MarkeCar", b =>
                {
                    b.Navigation("ModelCars");
                });

            modelBuilder.Entity("Autoservice.Infrastructure.Models.Master", b =>
                {
                    b.Navigation("ServiceCheckouts");
                });

            modelBuilder.Entity("Autoservice.Infrastructure.Models.ModelCar", b =>
                {
                    b.Navigation("ModificationCars");
                });

            modelBuilder.Entity("Autoservice.Infrastructure.Models.ModificationCar", b =>
                {
                    b.Navigation("CarParts");
                });

            modelBuilder.Entity("Autoservice.Infrastructure.Models.ServiceCheckout", b =>
                {
                    b.Navigation("ServiceSpares");

                    b.Navigation("ServiceTypeSumm");
                });

            modelBuilder.Entity("Autoservice.Infrastructure.Models.ServiceType", b =>
                {
                    b.Navigation("ServiceTypeSumm");
                });

            modelBuilder.Entity("Autoservice.Infrastructure.Models.SparePart", b =>
                {
                    b.Navigation("CarParts");

                    b.Navigation("SpareParts");
                });
#pragma warning restore 612, 618
        }
    }
}
